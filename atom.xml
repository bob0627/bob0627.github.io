<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://git.69cdn.com</id>
    <title>alect</title>
    <updated>2020-02-27T07:51:06.470Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://git.69cdn.com"/>
    <link rel="self" href="https://git.69cdn.com/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://git.69cdn.com/images/avatar.png</logo>
    <icon>https://git.69cdn.com/favicon.ico</icon>
    <rights>All rights reserved 2020, alect</rights>
    <entry>
        <title type="html"><![CDATA[OpenLiteSpeed使用CloudFlare等CDN如何显示访客的真实IP]]></title>
        <id>https://git.69cdn.com/post/openlitespeed-behind-cloudflare-show-user-real-ip/</id>
        <link href="https://git.69cdn.com/post/openlitespeed-behind-cloudflare-show-user-real-ip/">
        </link>
        <updated>2020-02-27T07:09:26.000Z</updated>
        <content type="html"><![CDATA[<p>本文为DirectAdmin面板如何使用OpenLiteSpeed系列的第二章：</p>
<p>第一章：<a href="https://git.69cdn.com/post/directadmin-use-openlitespeed-instead-of-apache/">DirectAdmin面板如何使用OpenLiteSpeed替代默认的Apache</a><br>
第二章：如果OpenLiteSpeed使用了CloudFlare等CDN如何显示访客的真实IP<br>
第三章：使用OpenLiteSpeed后如何开启HTTP/2 / HTTP/3 / SPDY / QUIC的支持<br>
第四章：DirectAdmin后台安装[LiteSpeed控制插件]一键安装缓存插件</p>
<p>跟Apache一样，OpenLiteSpeed（以下简称OLS）也需要将CloudFlare的ip库设置在OLS的配置文件中以后，才可以获取到访客的真实IP，否则只能在日志里面看到一堆CF的IP。</p>
<p>根据<a href="https://openlitespeed.org/kb/show-real-visitor-ip-instead-of-cloudflare-ips/">OLS官网的文章</a>，<strong>首先要开启“<a href="https://openlitespeed.org/kb/show-real-visitor-ip-instead-of-cloudflare-ips/">Use Client IP in Header</a>”功能</strong>，并且将CloudFlare的IP地址加入可信地址库后即可正确识别真实访客的IP地址，与Apache的“RemoteIPInternalProxy”功能如出一辙。如果是独立安装不使用cPanel或者DirectAdmin之类的控制面板的话，可以直接按照官方的提示进行操作即可。</p>
<figure data-type="image" tabindex="1"><img src="https://git.69cdn.com/post-images/1582789734146.png" alt="" loading="lazy"></figure>
<p>DirectAdmin面板在使用OLS时引入了外部配置文件，<a href="https://forum.directadmin.com/threads/da-openlitespeed-configuration-is-readonly.58254/">导致OLS的后台会直接提示你“只读模式”</a>，只能去修改配置文件了。用了DA面板后的配置文件跟原始OLS的配置文件并不相同，多次尝试后，应该修改OLS程序安装目录下/usr/local/lsws/conf/httpd-defaults.conf文件，在最后加上'useIpInProxyHeader        2'这段内容，如下图：</p>
<figure data-type="image" tabindex="2"><img src="https://git.69cdn.com/post-images/1582788909921.png" alt="" loading="lazy"></figure>
<pre><code class="language-javascript">cd /usr/local/lsws/conf
echo &quot;useIpInProxyHeader 2&quot;&gt; httpd-defaults.conf
</code></pre>
<p>第二部操作就是<a href="https://www.cloudflare.com/ips/">获取CloudFlare的IP地址库内容</a>，并按照OLS的格式加进配置文件，找到OLS程序安装目录下/usr/local/lsws/conf/httpd-accesscontrol.conf配置文件，清空原有内容，用我这个替换掉。</p>
<pre><code class="language-javascript">accessControl  {
  allow                   ALL, 103.21.244.0/22T, 103.22.200.0/22T, 103.31.4.0/22T, 104.16.0.0/12T, 108.162.192.0/18T, 131.0.72.0/22T, 141.101.64.0/18T, 162.158.0.0/15T, 172.64.0.0/13T, 173.245.48.0/20T, 188.114.96.0/20T, 190.93.240.0/20T, 197.234.240.0/22T, 198.41.128.0/17T, 199.27.128.0/21T
}
</code></pre>
<figure data-type="image" tabindex="3"><img src="https://git.69cdn.com/post-images/1582789748492.png" alt="" loading="lazy"></figure>
<p>如果你有其他的前端或者LB之类的，也一样要把IP地址加进去，并且最后一定要加上一个大写的T，改好后在OpenLiteSpeed后台刷新即可见到已经成功将CF的IP加载到了OLS配置文件中，从此即可正常显示访客的真实IP。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[DirectAdmin面板如何使用OpenLiteSpeed替代默认的Apache]]></title>
        <id>https://git.69cdn.com/post/directadmin-use-openlitespeed-instead-of-apache/</id>
        <link href="https://git.69cdn.com/post/directadmin-use-openlitespeed-instead-of-apache/">
        </link>
        <updated>2020-02-26T10:09:15.000Z</updated>
        <content type="html"><![CDATA[<p>预计将写成一个系列文章，本文为此系列的第一章：<br>
第一章：DirectAdmin面板如何使用OpenLiteSpeed替代默认的Apache<br>
第二章：如果OpenLiteSpeed使用了CloudFlare等CDN如何显示访客的真实IP<br>
第三章：使用OpenLiteSpeed后如何开启HTTP/2 / HTTP/3 / SPDY / QUIC的支持<br>
第四章：DirectAdmin后台安装[LiteSpeed控制插件]一键安装缓存插件</p>
<p>首先普及下<a href="https://openlitespeed.org/">OpenLiteSpeed</a>（以下简称OLS）相关知识，OLS是<a href="https://www.litespeedtech.com/">LiteSpeed Technologies Inc.</a>出品的一款开源的网页服务器，该公司出品的商业版Web服务器<a href="https://www.litespeedtech.com/products/litespeed-web-server">LiteSpeed Web Server, Enterprise edition</a>（简称LSWS）性能超强，在各种测试和实际使用中都是几乎都是地表最强的存在，以最常见的WordPress平台为例，使用LSWS服务器并且开启他们专门针对WP开发的缓存优化插件<a href="https://www.litespeedtech.com/products/cache-plugins">LSCache for WP</a>后，<a href="https://www.litespeedtech.com/benchmarks/wordpress">每秒处理能力远超其他插件</a>，如下图：</p>
<figure data-type="image" tabindex="1"><img src="https://git.69cdn.com/post-images/1582781686331.png" alt="" loading="lazy"></figure>
<p>并且无论是商业版还是开源版都支持很多最新的技术，比如HTTP/2 / HTTP/3 / SPDY / QUIC的支持，让网站打开飞快。</p>
<p>但是商业版LSWS的最大缺点<a href="https://www.litespeedtech.com/products/litespeed-web-server/lsws-pricing">就是贵🙁</a>，我们这里不考虑商业版。好在该公司也出了一个开源版的OLS，相信很多人也安装体验过，但是OLS在使用上非常不友好，与LSWS商业版相比较而言，阉割了最重要的功能：完全兼容Apache的httpd.conf文件以及.htaccess文件。开源版与商业版的区别见<a href="https://www.litespeedtech.com/products/litespeed-web-server/editions">官方页面</a>，如下图红圈位置OLS缺少了两个DirectAdmin最需要的功能。</p>
<figure data-type="image" tabindex="2"><img src="https://git.69cdn.com/post-images/1582781965857.png" alt="" loading="lazy"></figure>
<p>LSWS商业版的配置文件可以兼容Apache，而OLS的配置文件使用私有格式，这就导致了一个很严重的问题，现有流行的Web服务器操作面板如cPanel和DirectAdmin以及Plesk等都是基于Apache，一些内置的脚本也是基于Apache格式进行处理，所以我们之前还没有办法在CP或者DA上完美体验安装免费并且开源的OLS网页服务器。</p>
<p>在DirectAdmin更新到1.57版本以后（<a href="https://help.directadmin.com/item.php?id=2095">版本推出时间大约在2019年的4月底</a>），开始支持OLS的安装，但是当时我在体验时有很多莫名其妙的bug，后来也就没继续用。这两天因为更换服务器，重新安装了DirectAdmin，优化服务器的时候发现DA官方通过努力，已经很好的解决了上面提到的兼容性问题，所以我也就尝试安装了一下开源的OLS，以下为安装OLS替换Apache的过程。</p>
<p>要求：<strong>DA一定升级到最新版</strong>（<a href="https://help.directadmin.com/item.php?id=2095">1.57以上就支持了</a>，但是我劝你不是最新版别尝试）并且将DirectAdmin内置的<a href="https://help.directadmin.com/index.php?topic=29">Custombuild</a>也升级到<a href="https://help.directadmin.com/item.php?id=555">2.0最新版</a>，执行命令：</p>
<pre><code class="language-javascript">cd /usr/local/directadmin
mv custombuild custombuild_1.x
wget -O custombuild.tar.gz http://files.directadmin.com/services/custombuild/2.0/custombuild.tar.gz
tar xvzf custombuild.tar.gz
cd custombuild
./build
</code></pre>
<p>根据<a href="https://help.directadmin.com/item.php?id=2095">官方文档</a>的做法，在custombuild里面将webserver设置为OpenLiteSpeed，<strong>同时将php的模式改为OLS才支持的lsphp</strong>，然后开始编译OLS以及lsphp，最后重写DA的配置文件，编译过程比较久，请耐心等待。</p>
<pre><code class="language-javascript">./build update
./build set webserver openlitespeed
./build set mod_ruid2 no
./build set php1_mode lsphp
./build openlitespeed
./build php n
./build rewrite_confs
</code></pre>
<p>基本上如果你只需要一个php版本，那你看到这里就行了。<br>
像我安装了4个版本的php，所以我的操作如下（<a href="https://help.directadmin.com/item.php?id=2094">如何在DirectAdmin中安装多个版本的PHP</a>）：</p>
<pre><code class="language-javascript">cd /usr/local/directadmin/custombuild
./build update
./build set webserver openlitespeed
./build set mod_ruid2 no
./build set php1_release 7.3
./build set php2_release 7.2
./build set php3_release 7.1
./build set php4_release 5.6
./build set php1_mode lsphp
./build set php2_mode lsphp
./build set php3_mode lsphp
./build set php4_mode lsphp
./build php n
./build rewrite_confs
</code></pre>
<p>我这里指定了要安装的4个php的版本号，并且设定模式都是lsphp，执行完命令后，经过漫长等待，看到如下图这样的提示，安装结束了。</p>
<figure data-type="image" tabindex="3"><img src="https://git.69cdn.com/post-images/1582780222153.png" alt="" loading="lazy"></figure>
<p>剩下的一步也是最重要的一步，因为开源版的OLS为了跟商业版做出区别，<strong>十分恶心的限制了实时读取.htaccess文件的功能，仅仅在OLS启动的时候读取一次.htaccess</strong>，逼着大家用商业版。接下来这一步操作就是让系统定时扫描所有用户网站根目录下的.htaccess文件，如果发现有变动就自动重启OLS，以此来规避限制。</p>
<p>我们利用系统的cronjob功能在系统新增一个定时任务，进入/etc/cron.d/目录，新建文件名字为openlitespeed_htaccess_scan，把下面的代码写入文件即可。<br>
以下代码意思为每三分钟扫描所有用户网站根目录以及最深2层目录下的.htaccess文件是否有变动，如果变动了就重启OLS服务，你可以把 &quot;*/3&quot; 改为5或者其他间隔时间，不需要太小以免负载过大。&quot;maxdepth 2&quot;基本也就够了，查找的层数过多会有严重性能问题。</p>
<pre><code class="language-javascript">cd /etc/cron.d/
touch openlitespeed_htaccess_scan
echo &quot;*/3 * * * * root if ! find /home/*/domains/*/*_html/ -maxdepth 2 -type f -newer /usr/local/lsws/cgid -name '.htaccess' -exec false {} +; then /usr/local/lsws/bin/lswsctrl restart; fi&quot;&gt; touch openlitespeed_htaccess_scan
</code></pre>
<p>至此，安装OpenLiteSpeed替换Apache的过程就已经结束，你现在可以开始体验了。<br>
下一篇文章写“如果OpenLiteSpeed使用了CloudFlare等CDN如何显示访客的真实IP”的问题。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[hello world!]]></title>
        <id>https://git.69cdn.com/post/hello-world/</id>
        <link href="https://git.69cdn.com/post/hello-world/">
        </link>
        <updated>2020-02-25T04:55:26.000Z</updated>
        <content type="html"><![CDATA[<p><strong>hello world!</strong><br>
<img src="https://git.69cdn.com/post-images/1582606631293.JPG" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://git.69cdn.com/post/hello-gridea/</id>
        <link href="https://git.69cdn.com/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>